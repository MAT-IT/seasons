{"version":3,"sources":["SeasonsDisplay.js","Spinner.js","index.js"],"names":["seasonconfig","Summer","text","iconName","Winter","SeasonsDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMesssage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","rendercontent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAGMA,EAAe,CACnBC,OAAQ,CACNC,KAAM,0BACNC,SAAU,OAGZC,OAAQ,CACNF,KAAM,0BACNC,SAAU,cAyBCE,EAbQ,SAACC,GACtB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIE,EAELP,EAAaS,GAAhCP,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,SAEd,OACE,sBAAKS,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,4BAAwBT,EAAxB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAyBT,EAAzB,eC7BZU,EAAU,SAAAP,GACZ,OACQ,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,iBAAf,SAAiCN,EAAMQ,aAMvDD,EAAQE,aAAe,CACnBD,QAAQ,cAEID,QCRVG,E,4MAEFC,MAAO,CAACV,IAAI,KAAMW,cAAc,I,uDAEhC,WAAoB,IAAD,OAEfC,OAAOC,UAAUC,YAAYC,oBAEzB,SAAAC,GAEK,EAAKC,SAAS,CAACjB,IAAMgB,EAASE,OAAOC,cAG1C,SAAAC,GAGI,EAAKH,SAAS,CAAEN,cAAgBS,EAAIb,e,2BAOhD,WACI,OAAGc,KAAKX,MAAMV,MAAQqB,KAAKX,MAAMC,cACpB,cAAC,EAAD,CAAgBX,IAAKqB,KAAKX,MAAMV,OAGvCqB,KAAKX,MAAMV,KAAOqB,KAAKX,MAAMC,cACtB,2CAAcU,KAAKX,MAAMC,iBAG7B,cAAC,EAAD,CAASJ,QAAQ,wC,oBAG9B,WACI,OAEA,qBAAKF,UAAU,cAAf,SACKgB,KAAKC,sB,GAvCAC,IAAMC,WA+CxBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.279a8adb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './SeasonsDisplay.css'\r\n\r\nconst seasonconfig = {\r\n  Summer: {\r\n    text: \"Lets go to the beach!!!\",\r\n    iconName: \"sun\",\r\n  },\r\n\r\n  Winter: {\r\n    text: \"The weather soo cold!!!\",\r\n    iconName: \"snowflake\",\r\n  },\r\n};\r\n\r\nconst getseason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"Summer\" : \"Winter\";\r\n  } else {\r\n    return lat < 0 ? \"Summer\" : \"Winter\";\r\n  }\r\n};\r\n\r\nconst SeasonsDisplay = (props) => {\r\n  const season = getseason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonconfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={ `icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={ `icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonsDisplay;\r\n","import React from 'react'\r\n\r\nconst Spinner = props => {\r\n    return (\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui text loader\">{props.message}</div>\r\n            </div>\r\n           \r\n    )\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message:'Loading!!!'\r\n};\r\nexport default  Spinner;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonsDisplay from \"./SeasonsDisplay\";\r\nimport Spinner from \"./Spinner\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state ={lat:null, errorMesssage:\"\"}\r\n\r\n    componentDidMount(){\r\n\r\n        window.navigator.geolocation.getCurrentPosition(\r\n           \r\n            position =>\r\n            { \r\n                 this.setState({lat : position.coords.latitude})\r\n             },\r\n             \r\n            err => \r\n             {\r\n\r\n                this.setState({ errorMesssage : err.message})\r\n\r\n             } \r\n        );\r\n\r\n    }\r\n\r\n    rendercontent(){\r\n        if(this.state.lat && !this.state.errorMesssage){\r\n            return   <SeasonsDisplay lat={this.state.lat}/>\r\n          }\r\n  \r\n          if(!this.state.lat && this.state.errorMesssage){\r\n           return    <div>Error : {this.state.errorMesssage}</div>\r\n          }\r\n  \r\n          return <Spinner message=\"Please accept location request...\"/>\r\n\r\n    }\r\n    render () {\r\n        return (\r\n\r\n        <div className='border  red'>\r\n            {this.rendercontent()}\r\n        </div>\r\n        )\r\n        \r\n        \r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}